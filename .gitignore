# Project specific folders
resources/plots/
resources/q-trader/
resources/DeepLearningInFinance/
resources/Hands-On-Reinforcement-Learning-with-Python/
resources/Hands-On-Reinforcement-Learning-with-Python/*
resources/LSTM-Neural-Network-for-Time-Series-Prediction/
staging/
output/
data/
data/*
log/
s3/

#Â Project dependent ignores
params.yaml
params.*.yaml

# Some files not necessary to keep in github
./git-sequence.md

# macOS generic defaults
# General
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon


# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Python generic defaults
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Pycharm
.idea/
/resources/Hands-On-Reinforcement-Learning-with-Python/
/resources/Bitacora.md
tmp
Untitled.ipynb
params.???.yaml
init_symbol.sh
resources/slack/
*.icloud
*.aux
*.pdf
*.gz
*.toc
*.pygtex
*.pygstyle
git-sequence.md
/resources/logs/fit/20200816-205016/train/events.out.tfevents.1597603816.JesusMBP16.local.22280.260328.v2
resources/logs
/logs/
resources/mlruns
src/predictor/mlruns
/mlruns/0/meta.yaml
/unused/
/resources/docs/setup.md
docs
data_and_params.zip
notebooks/simple_predictor
notebooks/mlruns
.flake8
Turtle trading.ipynb
